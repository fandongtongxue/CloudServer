<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<!-- 将log4j.xml放在资源文件夹中（可将其所在文件夹标识为resource文件夹），则Logger会自动去加载它
     否则，自己写代码加载。-->

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
    <!-- 输出到控制台-->
    <appender name="STDOUT" class="org.apache.log4j.ConsoleAppender">
        <layout class="org.apache.log4j.PatternLayout">
            <!--
                %c       输出所属类的全名，可在修改为 %d{Num} ,Num类名输出的维（如："org.apache.elathen.ClassName",%C{2}将输出elathen.ClassName）
                %d       输出日志时间其格式为 %d{yyyy-MM-dd HH:mm:ss,SSS}，可指定格式 如 %d{HH:mm:ss}
                %l       输出日志事件发生位置，包括类目名、发生线程，在代码中的行数
                %n       换行符
                %m       输出代码指定信息，如info(“message”),输出message
                %p       输出优先级，即 FATAL ,ERROR 等
                %r       输出从启动到显示该log信息所耗费的毫秒数
                %t       输出产生该日志事件的线程名
             -->
            <param name="ConversionPattern" value="%d %-5p [%t] %C{2} (%F:%L) - %m%n"/>
        </layout>
    </appender>

    <!--
       org.apache.log4j.RollingFileAppender(滚动文件，自动记录最新日志)
       org.apache.log4j.ConsoleAppender (控制台)
       org.apache.log4j.FileAppender (文件)
       org.apache.log4j.DailyRollingFileAppender (每天产生一个日志文件)
       org.apache.log4j.WriterAppender (将日志信息以流格式发送到任意指定的地方)
    -->
    <!-- 输出到文件 -->
    <appender name="TEST_LOG4J_FILE" class="org.apache.log4j.DailyRollingFileAppender">
        <param name="File" value="./logs/test_log4j.log"/>
        <!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
        <param name="Append" value="true"/>
        <param name="MaxFileSize" value="600MB"/>
        <!-- 历史日志文件名后面追加的日期格式 -->
        <param name="DatePattern" value="'.'yyyy-MM-dd"/>
        <param name="Threshold" value="DEBUG"/>
        <!-- 编码 -->
        <param name="Encoding" value="GBK"/>
        <!-- 输出格式 -->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %-5p [%c{1}] %m%n"/>
        </layout>
    </appender>

    <!--
        日记记录的优先级priority，优先级由高到低分为
        OFF ,FATAL ,ERROR ,WARN ,INFO ,DEBUG ,ALL。
        Log4j建议只使用FATAL ,ERROR ,WARN ,INFO ,DEBUG这五个级别。
    -->
    <category name="com.company.TestLog4j">
        <priority value ="ERROR" />
        <appender-ref ref="TEST_LOG4J_FILE"/>
    </category>


    <!-- root 中的级别，受限制于上面category的日志级别 -->
    <root>
        <priority value="ALL"/>
        <appender-ref ref="STDOUT"/>
    </root>

    <!-- 有两篇介绍log4j的博客，感觉非常全面：http://blog.chinaunix.net/uid-26284395-id-3046712.html
         http://my.oschina.net/exit/blog/182445
    -->
</log4j:configuration>